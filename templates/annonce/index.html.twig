{# templates/search/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Offres de stage{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>
    <link rel="stylesheet" href="{{ asset('css/search.css') }}">
    <style>
        h1{
            display : flex;
        }
        .search-and-map-container {
            display: flex;
            gap: 20px;
            margin: 20px;
            height: calc(100vh - 180px); /* Réduit pour tenir compte de la barre de recherche */
        }
        .offers-list {
            flex: 1;
            overflow-y: auto;
            padding-right: 20px;
        }
        #map {
            flex: 2;
            height: 100%;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            z-index: 1; /* Ajout d'un z-index de base pour la carte */
        }
        /* Media queries pour le responsive */
        @media (max-width: 768px) {
            .search-and-map-container {
                flex-direction: column;
                margin: 10px;
                height: auto;
            }
            h1{
                display : none;
            }
            #map {
                display: none; /* Cache la carte sur mobile */
            }
            .offers-list {
                width: 100%;
                padding-right: 0;
            }
            .offer-card {
                margin: 10px 0;
            }
            .search-container {
                flex-direction: column;
                padding: 10px;
            }
            .search-input-wrapper {
                width: 100%;
            }
            .view-options {
                margin-top: 10px;
                width: 100%;
                justify-content: center;
            }
            .offer-content {
                flex-direction: column;
            }
            .offer-actions {
                flex-direction: row;
                padding-left: 0;
                padding-top: 10px;
                border-left: none;
                border-top: 1px solid #e0e0e0;
            }
            .modal-content {
                width: 90%;
                margin: 5% auto;
                padding: 15px;
            }
        }
        /* Assurer que les contrôles de la carte restent au-dessus */
        .leaflet-control-container {
            z-index: 2;
        }
        .offer-card {
            background: white;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            cursor: pointer;
            transition: transform 0.2s;
            display: flex;
            gap: 15px;
            border-left: 4px solid #e0e0e0;
        }
        .offer-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            border-left-color: #007bff;
        }
        .offer-image {
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f8f9fa;
            border-radius: 8px;
            flex-shrink: 0;
        }
        .offer-image i {
            font-size: 24px;
            color: #6c757d;
        }
        .offer-content {
            flex: 1;
            min-width: 0; /* Pour éviter le débordement */
            display: flex;
            gap: 15px;
        }
        .offer-main-content {
            flex: 1;
            min-width: 0; /* Pour éviter le débordement */
        }
        .offer-title {
            font-size: 16px;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 5px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        .offer-company {
            font-size: 14px;
            color: #7f8c8d;
            margin-bottom: 8px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        .offer-description {
            font-size: 14px;
            color: #6c757d;
            margin-bottom: 10px;
            line-height: 1.4;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        .offer-actions {
            display: flex;
            flex-direction: column;
            gap: 8px;
            padding-left: 15px;
            border-left: 1px solid #e0e0e0;
            flex-shrink: 0;
        }
        .view-btn, .wishlist-btn {
            padding: 6px 10px;
            border-radius: 6px;
            font-size: 16px;
            min-width: 40px;
            height: 34px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .view-btn {
            background-color: #e3f2fd;
            border: none;
            cursor: pointer;
            color: #1976d2;
            transition: all 0.2s;
        }
        .wishlist-btn {
            background-color: #fff0f3;
            border: none;
            cursor: pointer;
            color: #dc3545;
            transition: all 0.2s;
        }
        .view-btn:hover {
            background-color: #1976d2;
            color: white;
            transform: translateY(-1px);
        }
        .wishlist-btn:hover {
            background-color: #ffccd5;
            transform: translateY(-1px);
        }
        .wishlist-btn.active {
            background-color: #dc3545;
            color: white;
        }
        /* Styles pour la modal */
        .modal {
            display: none;
            position: fixed;
            z-index: 9999; /* Z-index plus élevé pour la modal */
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }
        .modal-content {
            background-color: white;
            margin: 5% auto;
            padding: 20px;
            width: 50%; /* Réduction de la largeur */
            max-width: 600px; /* Réduction de la largeur maximale */
            border-radius: 8px;
            position: relative;
            max-height: 80vh;
            overflow-y: auto;
            z-index: 10000;
        }
        .close-modal {
            position: absolute;
            right: 20px;
            top: 20px;
            font-size: 24px;
            cursor: pointer;
            color: #666;
        }
        .close-modal:hover {
            color: #000;
        }
        .modal-header {
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }
        .modal-section {
            margin-bottom: 20px;
        }
        .modal-section h3 {
            color: #2c3e50;
            margin-bottom: 10px;
            font-size: 16px;
            font-weight: 600;
        }
        .modal-section p {
            color: #34495e;
            line-height: 1.6;
            font-size: 14px;
        }
        .modal-footer {
            margin-top: 20px;
            padding-top: 20px;
            border-top: 1px solid #eee;
            display: flex;
            gap: 10px;
            justify-content: flex-end;
        }
        .btn {
            padding: 8px 16px;
            border-radius: 4px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            border: none;
            transition: all 0.2s;
        }
        .btn-primary {
            background-color: #0d6efd;
            color: white;
        }
        .btn-primary:hover {
            background-color: #0b5ed7;
        }
        .btn-outline {
            background-color: white;
            color: #0d6efd;
            border: 1px solid #0d6efd;
        }
        .btn-outline:hover {
            background-color: #f8f9fa;
        }
        .btn-secondary {
            background-color: #6c757d;
            color: white;
        }
        .btn-secondary:hover {
            background-color: #5c636a;
        }
    </style>
{% endblock %}

{% block body %}
    {# Barre de recherche avancée #}
    <div class="search-header">
        <h1>Offres de stage</h1>
        <div class="search-container">
            <div class="search-input-wrapper">
                <input type="text" id="search-input" placeholder="Rechercher">
                <img class="search-icon" src="{{ asset('images/Search.svg') }}" alt="Rechercher">
                {# Overlay #}
                <div id="search-overlay" class="search-overlay hidden">
                    <button id="close-overlay">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                            <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
                        </svg>
                    </button>
                    <div class="search-fields">
                        <div class="search-field">
                            <label for="quoi">QUOI ?</label>
                            <input type="text" id="quoi" placeholder="Métier, entreprise, compétence...">
                        </div>
                        <div class="search-field">
                            <label for="ou">OÙ ?</label>
                            <input type="text" id="ou" placeholder="Ville, département, code postal...">
                        </div>
                    </div>
                    <button id="search-button">Rechercher</button>
                </div>
            </div>
            <div class="view-options">
                <button class="option-btn active" data-sort-type="a-z">A-Z</button>
                <button class="option-btn" data-sort-type="z-a">Z-A</button>
                <button class="option-btn" data-sort-type="date^">Plus Tôt</button>
                <button class="option-btn" data-sort-type="datev">Plus Tard</button>
            </div>
        </div>
    </div>

    {# Modal pour les détails de l'offre #}
    <div id="offerModal" class="modal">
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <div class="modal-header">
                <h2 id="modalTitle"></h2>
                <p id="modalCompany"></p>
            </div>
            <div class="modal-section">
                <h3>Description</h3>
                <p id="modalDescription"></p>
            </div>
            <div class="modal-section">
                <h3>Compétences requises</h3>
                <p id="modalSkills"></p>
            </div>
            <div class="modal-section">
                <h3>Détails du stage</h3>
                <p id="modalDetails"></p>
            </div>
            <div class="modal-section">
                <h3>Entreprise</h3>
                <p id="modalCompanyDetails"></p>
            </div>
            <div class="modal-footer">
                <button onclick="saveOffer()" class="btn btn-outline">
                    <i class="fas fa-bookmark"></i> Enregistrer
                </button>
                <button onclick="applyOffer()" class="btn btn-primary">
                    <i class="fas fa-paper-plane"></i> Candidater
                </button>
                <button onclick="closeModal()" class="btn btn-secondary">Fermer</button>
            </div>
        </div>
    </div>

    {# Contenu principal avec carte et offres #}
    <div class="search-and-map-container">
        <div class="offers-list">
            {% for offre in offres %}
                <div class="offer-card"
                     data-lat="{{ offre.entreprise.adresse.latitude }}"
                     data-lng="{{ offre.entreprise.adresse.longitude }}"
                     data-id="{{ offre.id }}"
                     data-title="{{ offre.titreOffre }}"
                     data-company="{{ offre.entreprise.nom }}"
                     data-description="{{ offre.descriptionOffre }}"
                     data-skills="{{ offre.competencesRequises }}"
                     data-duration="{{ offre.dureeStage }}"
                     data-start-date="{{ offre.dateDebutStage|date('d/m/Y') }}"
                     data-end-date="{{ offre.dateFinStage|date('d/m/Y') }}"
                     data-salary="{{ offre.salaire }}"
                     data-address="{{ offre.entreprise.adresse.rue }}, {{ offre.entreprise.adresse.ville }}, {{ offre.entreprise.adresse.codePostal }}">
                    <div class="offer-image">
                        <i class="fas fa-building"></i>
                    </div>
                    <div class="offer-content">
                        <div class="offer-main-content">
                            <div class="offer-title">{{ offre.titreOffre }}</div>
                            <div class="offer-company">{{ offre.entreprise.nom }}</div>
                            <div class="offer-description">{{ offre.descriptionOffre }}</div>
                        </div>
                        <div class="offer-actions">
                            <button class="view-btn" title="Voir les détails">
                                👁️
                            </button>
                            {% if is_granted('ROLE_ETUDIANT') %}
                            <button class="wishlist-btn" title="Ajouter à ma wishlist" data-offer-id="{{ offre.id }}">
                                🤍
                            </button>
                            {% endif %}
                        </div>
                    </div>
                </div>
            {% else %}
                <div class="alert alert-info">
                    Aucune offre de stage disponible pour le moment.
                </div>
            {% endfor %}
        </div>

        <div id="map"></div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <script src="{{ asset('js/search.js') }}"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialisation de la carte
            var map = L.map('map').setView([46.603354, 1.888334], 6); // Centre sur la France

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                maxZoom: 19,
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);

            var markers = [];
            var modal = document.getElementById('offerModal');

            // Fonction pour enregistrer l'offre
            window.saveOffer = function() {
                const currentCard = document.querySelector('.offer-card[data-id="' + currentOfferId + '"]');
                if (currentCard) {
                    // TODO: Implémenter la logique de sauvegarde
                    alert('Offre enregistrée !');
                }
            }

            // Fonction pour candidater
            window.applyOffer = function() {
                const currentCard = document.querySelector('.offer-card[data-id="' + currentOfferId + '"]');
                if (currentCard) {
                    fetch('/candidature/new/' + currentOfferId, {
                        method: 'POST',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Fermer la modal
                            closeModal();
                            // Afficher un message de succès
                            alert('Votre candidature a été enregistrée avec succès !');
                            // Rediriger vers la page des candidatures
                            window.location.href = '/candidatures';
                        } else {
                            alert(data.error || 'Une erreur est survenue lors de l\'envoi de votre candidature.');
                        }
                    })
                    .catch(error => {
                        console.error('Erreur:', error);
                        alert('Une erreur est survenue lors de l\'envoi de votre candidature.');
                    });
                }
            }

            // Variable pour stocker l'ID de l'offre courante
            let currentOfferId = null;

            // Fonction pour ouvrir la modal avec les détails de l'offre
            function openModal(card) {
                currentOfferId = card.dataset.id;
                document.getElementById('modalTitle').textContent = card.dataset.title;
                document.getElementById('modalCompany').textContent = card.dataset.company;
                document.getElementById('modalDescription').textContent = card.dataset.description;
                document.getElementById('modalSkills').textContent = card.dataset.skills;

                // Formatage des détails du stage
                var details = `
                    Durée : ${card.dataset.duration} mois<br>
                    Date de début : ${card.dataset.startDate}<br>
                    Date de fin : ${card.dataset.endDate}<br>
                    Salaire : ${card.dataset.salary}€ par mois
                `;
                document.getElementById('modalDetails').innerHTML = details;

                // Détails de l'entreprise
                document.getElementById('modalCompanyDetails').innerHTML = `
                    ${card.dataset.company}<br>
                    Adresse : ${card.dataset.address}
                `;

                modal.style.display = 'block';
            }

            // Fonction pour fermer la modal
            window.closeModal = function() {
                modal.style.display = 'none';
            }

            // Fermer la modal en cliquant sur la croix
            document.querySelector('.close-modal').onclick = closeModal;

            // Fermer la modal en cliquant en dehors
            window.onclick = function(event) {
                if (event.target == modal) {
                    closeModal();
                }
            }

            // Ajout des marqueurs pour chaque offre
            document.querySelectorAll('.offer-card').forEach(function(card) {
                var lat = parseFloat(card.dataset.lat);
                var lng = parseFloat(card.dataset.lng);

                if (lat && lng) {
                    var marker = L.marker([lat, lng])
                        .bindPopup(card.querySelector('.offer-title').textContent)
                        .addTo(map);

                    markers.push({
                        marker: marker,
                        card: card
                    });

                    // Lien entre le marqueur et la carte
                    marker.on('click', function() {
                        card.scrollIntoView({ behavior: 'smooth', block: 'center' });
                        card.style.backgroundColor = '#f0f8ff';
                        setTimeout(() => card.style.backgroundColor = '', 2000);
                    });

                    // Clic sur la carte pour centrer sur le marqueur
                    card.addEventListener('click', function(e) {
                        // Ne pas déclencher si on clique sur le bouton de vue
                        if (!e.target.closest('.view-btn')) {
                            map.setView([lat, lng], 13);
                            marker.openPopup();
                        }
                    });

                    // Bouton pour voir les détails
                    const viewBtn = card.querySelector('.view-btn');
                    viewBtn.addEventListener('click', function(e) {
                        e.stopPropagation(); // Empêcher la propagation du clic
                        openModal(card);
                    });
                }
            });

            // Intégration avec la recherche avancée
            const searchInput = document.getElementById('search-input');
            // Synchroniser la recherche simple avec la recherche avancée
            searchInput.addEventListener('input', function(e) {
                var searchText = e.target.value.toLowerCase();

                markers.forEach(function(item) {
                    var title = item.card.querySelector('.offer-title').textContent.toLowerCase();
                    var company = item.card.querySelector('.offer-company').textContent.toLowerCase();
                    var description = item.card.querySelector('.offer-description').textContent.toLowerCase();

                    if (title.includes(searchText) || company.includes(searchText) || description.includes(searchText)) {
                        item.card.style.display = '';
                        item.marker.setOpacity(1);
                    } else {
                        item.card.style.display = 'none';
                        item.marker.setOpacity(0.2);
                    }
                });
            });

            // Gestion de la recherche avancée
            const searchButton = document.getElementById('search-button');
            searchButton.addEventListener('click', function() {
                const quoi = document.getElementById('quoi').value.toLowerCase();
                const ou = document.getElementById('ou').value.toLowerCase();

                markers.forEach(function(item) {
                    var title = item.card.querySelector('.offer-title').textContent.toLowerCase();
                    var company = item.card.querySelector('.offer-company').textContent.toLowerCase();
                    var description = item.card.querySelector('.offer-description').textContent.toLowerCase();
                    var matched = true;

                    if (quoi && !(title.includes(quoi) || company.includes(quoi) || description.includes(quoi))) {
                        matched = false;
                    }

                    // Vérifier la localisation si spécifiée
                    if (matched && ou) {
                        // On pourrait ajouter ici plus de détails sur la localisation
                        // comme la ville ou le département extraits des données
                        matched = false; // Par défaut, jusqu'à une vérification réelle

                        // Simulation - à remplacer par une vérification réelle
                        // par exemple avec la ville de l'entreprise
                        var address = item.card.dataset.address.toLowerCase();
                        if (address.includes(ou)) {
                            matched = true;
                        }
                    }

                    if (matched) {
                        item.card.style.display = '';
                        item.marker.setOpacity(1);
                    } else {
                        item.card.style.display = 'none';
                        item.marker.setOpacity(0.2);
                    }
                });

                // Fermer l'overlay après la recherche
                document.getElementById('search-overlay').style.display = 'none';
            });

            // Gestion de la wishlist
            document.querySelectorAll('.wishlist-btn').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.stopPropagation(); // Empêcher la propagation du clic
                    const offerId = this.dataset.offerId;

                    // Toggle de la classe active
                    this.classList.toggle('active');

                    // Mise à jour du texte du bouton
                    if (this.classList.contains('active')) {
                        this.innerHTML = '❤️';
                        // Appel AJAX pour ajouter à la wishlist
                        fetch('/wishlist/add/' + offerId, {
                            method: 'POST',
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest'
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Animation de succès si besoin
                            }
                        });
                    } else {
                        this.innerHTML = '🤍';
                        // Appel AJAX pour retirer de la wishlist
                        fetch('/wishlist/remove/' + offerId, {
                            method: 'POST',
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest'
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Animation de succès si besoin
                            }
                        });
                    }
                });

                // Vérifier si l'offre est déjà dans la wishlist au chargement
                const offerId = button.dataset.offerId;
                fetch('/wishlist/check/' + offerId)
                    .then(response => response.json())
                    .then(data => {
                        if (data.inWishlist) {
                            button.classList.add('active');
                            button.innerHTML = '❤️';
                        } else {
                            button.innerHTML = '🤍';
                        }
                    });
            });
        });
    </script>
{% endblock %}
